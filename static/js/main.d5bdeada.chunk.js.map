{"version":3,"sources":["components/layout/spinner.gif","components/layout/NavBar.js","components/layout/Footer.js","actions/searchActions.js","actions/types.js","components/home/SearchForm.js","components/layout/Spinner.js","components/home/MovieCard.js","components/home/MovieContainer.js","components/home/Landing.js","components/home/Movie.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","id","Footer","style","color","fontWeight","setLoading","type","SearchForm","handleChange","e","props","searchMovie","target","value","handleSubmit","preventDefault","fetchMovie","text","onSubmit","this","name","placeholder","onChange","Component","connect","state","movies","dispatch","payload","axios","get","then","response","data","catch","err","console","log","Spinner","src","spinner","width","margin","display","alt","MovieCard","movie","Poster","Title","Year","to","imdbID","MovieContainer","content","Response","Search","map","index","key","Landing","loading","Movie","fetchMovieId","match","params","movieInfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","href","rel","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d5bdeada.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.8ee7fcb9.gif\";","import React from 'react';\r\n//import { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Navbar() {\r\n  return (\r\n    // <div>\r\n    //   <nav className=\"navbar navbar-light bg-dark mb-5\">\r\n    //     <div className=\"container\">\r\n    //       <div className=\"navbar-header\">\r\n    //         <Link className=\"navbar-brand text-white text-xl brand-text\" to=\"/\">\r\n    //           MovieSeriesInfo\r\n    //         </Link>\r\n    //       </div>\r\n    //       <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n    //         <li className=\"nav-item d-inline-block mr-4\">\r\n    //           <i className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\" />\r\n    //         </li>\r\n    //       </ul>\r\n    //     </div>\r\n    //   </nav>\r\n    // </div>\r\n<div className=\"header\">\r\n  <h1>MovieSeriesInfo</h1>\r\n  <i className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\" />\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n//import {Link} from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>Developed By:&nbsp;<span style={{color:\"blue\",fontWeight:\"bold\"}}>Vivek Chaurasia,</span>&nbsp;Using &nbsp;<i className=\"fab fa-react\" />&nbsp; React JS ,&nbsp; Redux JS,\r\n            &nbsp;integrated with external movies data API <span style={{color:\"blue\",fontWeight:\"bold\"}}>OMDBI</span> </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import {SEARCH_MOVIE, FETCH_MOVIE,FETCH_MOVIE_ID,LOADING} from './types';\r\nimport axios from 'axios';\r\n//import APIKey from '../APIKey';\r\n\r\nexport const searchMovie = text =>dispatch =>{\r\n    dispatch(\r\n        {\r\n            type: SEARCH_MOVIE,\r\n            payload: text\r\n        }\r\n    )\r\n};\r\n\r\nexport const fetchMovie = text =>dispatch =>{\r\n    axios.get(` http://www.omdbapi.com/?i=tt3896198&apikey=35db4827&s=${text}`)\r\n    .then(response=>dispatch(\r\n        {\r\n            type: FETCH_MOVIE,\r\n            payload: response.data\r\n        }\r\n    ))\r\n    .catch(err=>console.log(err))\r\n}\r\n\r\nexport const fetchMovieId = id =>dispatch =>{\r\n    console.log(id);\r\n    axios.get(` http://www.omdbapi.com/?apikey=35db4827&i=${id}`)\r\n    .then(response=>dispatch(\r\n        {\r\n            type: FETCH_MOVIE_ID,\r\n            payload: response.data\r\n        }\r\n    ))\r\n    .catch(err=>console.log(err))\r\n}\r\n\r\nexport const setLoading =()=>{\r\n    return{\r\n        type:LOADING\r\n    }\r\n}","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\r\nexport const FETCH_MOVIE_ID = 'FETCH_MOVIE_ID';\r\nexport const LOADING = 'LOADING';","import React, { Component } from 'react';\r\nimport { searchMovie, fetchMovie, setLoading } from '../../actions/searchActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SearchForm extends Component {\r\n\r\n    handleChange = e => {\r\n        this.props.searchMovie(e.target.value);\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.fetchMovie(this.props.text);\r\n        //console.log(this.props.fetchMovie(this.props.text));\r\n        this.props.setLoading();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"search-form\">\r\n                <h1>\r\n                    <i className=\"fa fa-search\" /> Search for a movie ,TV series ..\r\n                </h1>\r\n                <form id=\"searchForm\" onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"searchText\"\r\n                        placeholder=\"Search Movies, TV Series ...\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button type=\"submit\">\r\n                        Search\r\n                    </button>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    text: state.movies.text\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchMovie, fetchMovie, setLoading })(SearchForm);\r\n","import React from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div>\r\n            <img \r\n            src={spinner}\r\n            style={{width:\"200px\",margin:\"auto\",display:\"block\"}}\r\n            alt=\"Loading......\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class MovieCard extends Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      <div className=\"col-md-3 mb-5\">\r\n        <div className=\"card card-body bg-dark text-center h-100\">\r\n          <img className=\"w-100 mb-2\" src={movie.Poster} alt=\"Movie Cover\" />\r\n          <h5 className=\"text-light card-title\">\r\n            {movie.Title} - {movie.Year}\r\n          </h5>\r\n          <Link className=\"btn btn-primary text-dark\" to={'/movie/' + movie.imdbID}>\r\n            Movie Details\r\n            <i className=\"fas fa-chevron-right\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard;","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport MovieCard from './MovieCard';\r\nclass MovieContainer extends Component {\r\n    render() {\r\n        const {movies}=this.props;\r\n        let content='';\r\n        content=\r\n        movies.Response===\"True\" ? movies.Search.map((movie,index)=><MovieCard key={index} movie={movie} />):null;\r\n        return (\r\n            <div className=\"row\">\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    movies:state.movies.movies\r\n})\r\nexport default connect(mapStateToProps)(MovieContainer);\r\n","import React, { Component } from 'react'\r\nimport SearchForm from './SearchForm';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport MovieContainer from './MovieContainer';\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n    const {loading}=this.props;\r\n        return (\r\n            <div>\r\n                <SearchForm/>\r\n                {loading? <Spinner/>: <MovieContainer/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>({\r\n    loading:state.movies.loading\r\n})\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { fetchMovieId, setLoading } from '../../actions/searchActions';\r\n\r\nimport Spinner from '../layout/Spinner';\r\nclass Movie extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchMovieId(this.props.match.params.id);\r\n    this.props.setLoading();\r\n    console.log(this.props);\r\n  }\r\n  render() {\r\n    const { loading, movie } = this.props;\r\n    //console.log(this.props);\r\n    let movieInfo = (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 card card-body\">\r\n            <img src={movie.Poster} className=\"thumbnail\" alt=\"Poster\" />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <h1 className=\"mb-4 text-light\">{movie.Title}</h1>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                <strong>Genre:</strong> {movie.Genre}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Released:</strong> {movie.Released}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Rated:</strong> {movie.Rated}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Director:</strong> {movie.Director}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Writer:</strong> {movie.Writer}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Actors:</strong> {movie.Actors}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"card card-body bg-dark my-5 text-light\">\r\n            <div className=\"col-md-12\">\r\n              <h3>About </h3>\r\n              {movie.Plot}\r\n              <hr />\r\n              <a\r\n                href={'https://www.imdb.com/title/' + movie.imdbID}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-primary text-dark\"\r\n              >\r\n                View on IMDB\r\n              </a>\r\n              <Link to=\"/\" className=\"btn btn-primary text-dark\">\r\n                Go Back To Search\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let content = loading ? <Spinner /> : movieInfo;\r\n    return <div>{content}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.movies.loading,\r\n  movie: state.movies.movie\r\n  \r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchMovieId, setLoading }\r\n)(Movie);","import {SEARCH_MOVIE, FETCH_MOVIE,FETCH_MOVIE_ID,LOADING} from '../actions/types';\r\n\r\nconst initialState = {\r\n    text:'',\r\n    movies:[],\r\n    loading:false,\r\n    movie:[]\r\n}\r\n\r\nexport default function(state=initialState,action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case SEARCH_MOVIE:\r\n            return{\r\n                ...state,\r\n                text:action.payload,\r\n                loading:false\r\n            }\r\n            case FETCH_MOVIE:\r\n            return{\r\n                ...state,\r\n                movies: action.payload,\r\n                loading:false\r\n            }\r\n            case FETCH_MOVIE_ID:\r\n            return{\r\n                ...state,\r\n                movie: action.payload,\r\n                loading:false\r\n            }\r\n            case LOADING:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n            default:\r\n                return state\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers(\r\n    {\r\n        movies: searchReducer\r\n    }\r\n);","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware=[thunk];\r\nconst initialState= {};\r\n\r\nconst store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middleware)));\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux'\nimport './App.css';\nimport Navbar from './components/layout/NavBar';\nimport Footer from './components/layout/Footer';\nimport Landing from './components/home/Landing';\nimport Movie from './components/home/Movie';\nimport { HashRouter as Router,Route } from 'react-router-dom';\n\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"app\">\n        <Navbar/>\n        <Route exact path=\"/\" component={Landing} />\n        <Route path=\"/movie/:id\" component={Movie} />\n        <Footer/>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}